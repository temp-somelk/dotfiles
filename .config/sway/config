# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term termite
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/archlinux/"$(shuf -n1 -e 'geowaves.png' 'geolanes.png' 'wirefeather.png' 'wireparts.png' 'wild.png')" fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 60 'brightnessctl -s && brightnessctl set 20' resume 'brightnessctl -r' \
         timeout 240 'swaylock' \
         timeout 300 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         timeout 360 'systemctl suspend -i' \
         before-sleep 'swaylock'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input "type:touchpad" {
      dwt enabled
      tap enabled
      tap_button_map lrm
      middle_emulation enabled
      natural_scroll disabled
      scroll_method two_finger
      scroll_factor 0.5
      accel_profile adaptive
      pointer_accel 0.2
}

# Typematic delay and rate
input "type:keyboard" {
      xkb_layout us
      repeat_delay 500
      repeat_rate 30
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings

# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill
    bindsym button2 kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
    # Next and Previous workspace
    bindsym $mod+Tab workspace next
    bindsym $mod+Shift+Tab workspace prev
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Same but with NumPad
    bindsym $mod+KP_1 workspace number 1
    bindsym $mod+KP_2 workspace number 2
    bindsym $mod+KP_3 workspace number 3
    bindsym $mod+KP_4 workspace number 4
    bindsym $mod+KP_5 workspace number 5
    bindsym $mod+KP_6 workspace number 6
    bindsym $mod+KP_7 workspace number 7
    bindsym $mod+KP_8 workspace number 8
    bindsym $mod+KP_9 workspace number 9
    bindsym $mod+KP_0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Same but with NumPad
    bindsym $mod+Shift+KP_1 move container to workspace number 1
    bindsym $mod+Shift+KP_2 move container to workspace number 2
    bindsym $mod+Shift+KP_3 move container to workspace number 3
    bindsym $mod+Shift+KP_4 move container to workspace number 4
    bindsym $mod+Shift+KP_5 move container to workspace number 5
    bindsym $mod+Shift+KP_6 move container to workspace number 6
    bindsym $mod+Shift+KP_7 move container to workspace number 7
    bindsym $mod+Shift+KP_8 move container to workspace number 8
    bindsym $mod+Shift+KP_9 move container to workspace number 9
    bindsym $mod+Shift+KP_0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle
    bindsym button3 floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+grave move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+grave scratchpad show

# Resizing containers:
mode "Resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # With +/- keys
    bindsym equal resize grow width 10px
    bindsym minus resize shrink width 10px
    bindsym bracketright resize grow height 10px
    bindsym bracketleft resize shrink height 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "Resize"

# Volume, Media and Brightness
bindsym --locked XF86AudioRaiseVolume exec amixer sset Master 5%+
bindsym --locked XF86AudioLowerVolume exec amixer sset Master 5%-
bindsym --locked Shift+XF86AudioRaiseVolume exec amixer sset Master 2%+
bindsym --locked Shift+XF86AudioLowerVolume exec amixer sset Master 2%-
bindsym --locked XF86AudioMute exec amixer set Master toggle
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set +5%
bindsym --locked Shift+XF86MonBrightnessDown exec brightnessctl set 2%-
bindsym --locked Shift+XF86MonBrightnessUp exec brightnessctl set +2%
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous

# Screenshots
bindsym Print exec grim $HOME/Pictures/Screenshots/$(date +'%F_%T.png')
bindsym Shift+Print exec grim -g "$(slurp)" $HOME/Pictures/Screenshots/$(date +'%F_%T.png')
bindsym Ctrl+Print exec grim - | wl-copy
bindsym Ctrl+Shift+Print exec grim -g "$(slurp)" - | wl-copy
bindsym $mod+Print exec swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -g - $HOME/Pictures/Screenshots/$(date +'%F_%T.png')

# Screencasts
bindsym $mod+F10 exec wf-recorder --audio="$(pactl list sources | grep "Name" | grep "output" | cut -c 8-)" -f $HOME/Videos/Screencasts/$(date +'%F_%T.mp4')
bindsym $mod+Shift+F10 exec wf-recorder -g "$(slurp)" --audio="$(pactl list sources | grep "Name" | grep "output" | cut -c 8-)" -f $HOME/Videos/Screencasts/$(date +'%F_%T.mp4')
bindsym $mod+Escape exec killall -s SIGINT wf-recorder

# Power Options
set $mode_system (l)ock (s)uspend (e)Logout (R)eboot, (S)hutdown
mode "$mode_system" {
    bindsym l exec swaylock, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    bindsym s exec systemctl suspend -i, mode "default"
    bindsym Shift+r exec systemctl reboot -i, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+x mode "$mode_system"

# Notifications
exec mako

# Redshit
exec gammastep

# Status Bar
exec waybar

# Clipboard Manager
exec clipman clear -a
exec wl-paste -t text --watch clipman store --max-items=20
exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"
bindsym $mod+z exec clipman pick -t wofi
bindsym $mod+Shift+z exec clipman clear -a

font pango:SourceSansPro 10

# Gaps
# exec swaymsg border normal
bindsym $mod+equal gaps outer current plus 15
bindsym $mod+minus gaps outer current minus 15
bindsym $mod+Shift+equal gaps inner current plus 15
bindsym $mod+Shift+minus gaps inner current minus 15
gaps inner 15
gaps outer 15
# workspace 3,5,6 gaps outer,inner 0
workspace 3 gaps outer 0
workspace 3 gaps inner 0
workspace 5 gaps outer 0
workspace 5 gaps inner 0
workspace 6 gaps outer 0
workspace 6 gaps inner 0

# App specific commands
assign [app_id="firefox"] workspace 3
assign [class="vlc"] workspace 6
for_window [class="zoom"] inhibit_idle visible
for_window [class="vlc"] inhibit_idle visible
for_window [workspace=3] layout tabbed
for_window [workspace=5] layout tabbed
for_window [workspace=6] layout tabbed
for_window [workspace=10] floating enabled

include config.nord
include /etc/sway/config.d/*
